<!DOCTYPE html>
<html>
<head>
  <title>Add Favorite Champion</title>
  <style>
    body {
        font-family: 'Arial', sans-serif;
        background: linear-gradient(to right, #1a2a4d, #87ceeb); /* Blue to sky blue */
        color: #ffffff; /* White */
        margin: 0;
        padding: 0;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        height: 100vh;
    }

    .container {
        display: flex;
        width: 90%; 
        margin-left: 20px;
    }

    h1 {
        color: #ffcc00; /* Gold */
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.7);
        font-size: 2.5em;
        margin-bottom: 20px;
    }

    h2 {
        color: #ffcc00; /* Gold */
        font-size: 2.5em;
        margin: 20px 0;
    }

    p {
        margin: 10px 0;
    }

    form {
        display: flex;
        flex-direction: column;
        align-items: center;
        background: rgba(255, 255, 255, 0.1); 
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
        width: 300px; 
        margin-right: 20px; 
    }

    label {
        margin: 10px 0 5px;
        font-size: 1.1em;
    }

    input, select, textarea {
        padding: 10px;
        border: 2px solid #ffcc00; /* Gold */
        border-radius: 5px;
        font-size: 1em;
        width: 200px; 
        margin-bottom: 15px; 
        background: rgba(255, 255, 255, 0.2); 
        color: #ffcc00; /* Gold */
    }

    button {
        padding: 15px 30px; 
        border: 2px solid #ffcc00; /* Gold */
        border-radius: 5px;
        font-size: 1.2em; 
        color: #ffcc00; /* Gold */
        background: transparent; 
        cursor: pointer;
        transition: background 0.3s, color 0.3s;
        margin: 1px;
    }

    button:hover {
        background-color: #ffcc00; /* Gold */
        color: #0e1e3a; /* Dark blue */
    }
    
    .button {
        padding: 15px 30px; 
        border: 2px solid #ffcc00; /* Gold */
        border-radius: 5px;
        font-size: 1.2em; 
        color: #ffcc00; /* Gold */
        background: transparent; 
        cursor: pointer;
        transition: background 0.3s, color 0.3s;
        margin: 5px;
    }

    .button:hover {
        background-color: #ffcc00; /* Gold */
        color: #0e1e3a; /* Dark blue */
        text-decoration: none;
    }

    .champion-container {
        display: flex;
        flex-direction: column; /* Stack champions vertically */
        margin-left: 20px; /* Space between form and champion list */
        flex-grow: 1; /* Allow champion container to grow and take available space */
    }

    .champion-title {
        display: flex;
        flex-direction: column; /* Stack title and button */
        align-items: flex-start; /* Align items to the left */
        margin-bottom: 10px; /* Space below title */
    }

    .champion-list {
        display: flex; /* Flexbox for horizontal display of champions */
        flex-wrap: nowrap; /* Prevent wrapping */
        margin-top: 20px; /* Space above champions */
        overflow-x: auto; /* Allow horizontal scrolling if needed */
        justify-content: flex-start; /* Align champions to the left */
        max-width: 1500px;
    }

    .champion-card {
        display: flex;
        flex-direction: column; /* Align image and role vertically */
        align-items: center; /* Center items horizontally */
        margin: 10px; /* Space between champions */
        background: rgba(255, 255, 255, 0.1);
        border-radius: 10px;
        padding: 10px;
        width: 250px;
    }

    img {
    width: 250px; /* Set a fixed width for champion images */
    height: auto; /* Maintain aspect ratio */
    border-radius: 5px;
    margin-bottom: 5px; /* Space between image and name */
    }

    .role-name {
        color: #ffcc00; /* Gold */
        margin-bottom: 5px; /* Space between role and image */
    }

    a {
        color: #ffcc00; /* Gold */
        text-decoration: none;
    }

    a:hover {
        text-decoration: underline;
    }
  </style>
</head>
<body>
  <div class="container">
    <form action="/favorites/add" method="post">
      <h1>Add Favorite Champion</h1>
      <% if (error) { %>
        <p style="color: red;"><%= error %></p>
      <% } %>
      <label for="championName">Champion Name:</label>
      <input type="text" id="championName" name="championName" value="<%= championName || '' %>" required />

      <label for="role">Role:</label>
      <select name="role" required>
        <option value="">--Select Role--</option>
        <option value="TOP" <%= role === 'TOP' ? 'selected' : '' %>>TOP</option>
        <option value="JG" <%= role === 'JG' ? 'selected' : '' %>>JG</option>
        <option value="MID" <%= role === 'MID' ? 'selected' : '' %>>MID</option>
        <option value="AD" <%= role === 'AD' ? 'selected' : '' %>>AD</option>
        <option value="SUP" <%= role === 'SUP' ? 'selected' : '' %>>SUP</option>
      </select>

      <label for="notes">Notes:</label><br />
      <textarea name="notes" rows="5"><%= notes || '' %></textarea><br />
      <button type="submit">Add Favorite</button>
      <a href="/favorites" class="button no-underline">Back to Favorites</a>
    </form>

    <div class="champion-container">
      <div class="champion-title">
        <h1>Pick a lucky champion and give a role</h1>
        <form action="/favorites/refresh" method="post">
          <button type="submit">Refresh Champions</button>
        </form>
        <h1>Champions you may like:</h1>
      </div>

	<div class="champion-list">
  	<% 
       	  const roleMap = {};
          let displayedChampions = 0; // Counter for displayed champions
          const maxChampions = 5; // Maximum number of champions to display

    	  if (championData && championData.length > 0) {
      	  // Group champions by role
      	  championData.forEach(champion => {
            const role = champion.roles[0]; // Get the first role
            if (!roleMap[role]) {
         	roleMap[role] = [];
            }
            roleMap[role].push(champion);
           });

      	  // Iterate over roles and display champions
      	  Object.keys(roleMap).forEach(role => {
            if (displayedChampions < maxChampions) { // Check if we can still display more champions
       		const championsOfRole = roleMap[role];
          	const randomChampion = championsOfRole[Math.floor(Math.random() * championsOfRole.length)];
            	displayedChampions++; // Increment the counter
          	%>
          	<div class="champion-card">
            	  <img src="https://ddragon.leagueoflegends.com/cdn/img/champion/loading/<%= randomChampion.id %>_0.jpg" alt="<%= randomChampion.name %>">
            	  <button onclick="setChampionName('<%= randomChampion.name %>')"><%= randomChampion.name %></button>
          	</div>
          	<%
              }
            });
          } else { 
      	%>
            <p>No champions available at the moment.</p>
        <% } %>
     </div>
    </div>
  </div>

  <script>
    function setChampionName(name) {
      document.getElementById('championName').value = name; // Set the champion name in the input field
    }
  </script>
</body>
</html>
